№ 1
Напишите код на Python, который предлагает пользователю ввести свой рост, вес, возраст через запятую. На выходе программа должна вывести ИМТ (индекс массы тела) и возраст в виде:
Ваш ИМТ - <числовое значение> (<интерпретация значения по сводной таблице>)
Ваша возрастная категория - <наименование категории по таблице>

Переменные должны быть названы в соответствии со значениями, которые в них содержатся.
Т.е. вес - weight, возраст - old или age и т.д.
Программа должна понимать, в сантиметрах вводит пользователь значение или в метрах (для метров используется точка, например 1.80).

Формула для вычисления ИМТ: вес/рост (в метрах) ^ 2

Программа должна выполнять следующие проверки:

Пользователь ввел все нужные параметры.
Введенные значения должны быть цифровыми.
Проверка деления на 0.
Если какая-либо проверка не выполняется, программа должна вернуть предупреждение для пользователя, и запросить ввод данных повторно.

Сводная таблица ИМТ:

до 16 (включительно): Выраженный дефицит массы тела
от 16 до 18,5 (включительно): Недостаточная (дефицит) масса тела
от 18,5 до 25 (включительно): Норма
от 25 до 30 (включительно): Избыточная масса тела (предожирение)
от 30 до 35 (включительно): Ожирение первой степени
от 35 до 40 (включительно): Ожирение второй степени
от 40 и более: Ожирение третьей степени (морбидное)
Таблица возрастных категорий:

до 1 года (включительно): Младенец
от 1 года до 10 лет (включительно): Ребенок
от 10 лет до 18 лет (включительно): Подросток
от 18 лет до 60 лет (включительно): Взрослый
от 60 лет: Пожилой



№ 2
Написать код на Python, который предлагает ввести пользователю дату в формате dd.mm.yyyy, на выходе необходимо получить:

dd.mm.yyyy - <обычный/високосный год>
<год> год (также добавить наименование года, обезьяны или собаки, например)
<n> квартал
<месяц> месяц (прописью)
<день> день
<сколько прошло суток от начала года>
<день недели> день недели

При выполнении данной задачи не следует пользоваться специализированными модулями Python для работы с датами.

Программа должна проверять, что пользователь ввел дату в корректном формате. Если формат некорректный, программа должна выдать предупреждение и запросить повторный ввод данных.
Числовое значение - от начала времен (01.01.1970) при условии, что время берется в виде 00:00:00.

Если при запуске скрипта добавить аргумент, то возьмется случайная дата (от 1970 года) без возможности вводить ее пользователю.



№ 3
Написать код на Python, который предлагает получить n-ое значения числа Фибоначчи и вычислить факториал n!.
Само значение N вводится пользователем, после чего на экран выводится вся последовательность числе Фибоначчи в виде итераций, число итераций и вычисленный факториал. Например, N = 5.
1 итерация: 2
2 итерация: 3
3 итерация: 5
4 итерация: 8
5 итерация: 13
Выполнено 5 итераций. Факториал 5! = 120

Первичные значения 1 и 1 не учитываются при расчете. Об этом необходимо уведомить пользователя с помощью вывода на экран во время запуска приложения.

Должна быть проверка на допустимость значения. При N < 1 на экране выводится ошибка.



№ 4
Написать код на Python, который предлагает сыграть с пользователем в угадайку. Программа загадывает число от 1 до 100, пользователю дана возможность ввода.
Если пользователь не угадывает, программа сообщает ему об этом. Скрипт не завершается до тех пор, пока пользователь не угадает значение.

Проверка на "попадание" должна находиться в отдельной функции, в которую передается два аргумента - загаданное число и ввод от пользователя. На выходе функции должна быть строка с пояснением, куда двигаться пользователю. Необходимо использовать ориентир, состоящий из 2 параметров:
1) Расстояние от точки, в которой находится игрок до цели. Абсолютная величина, выражается в следующих единицах: "холодно", "тепло", "горячо", "жарко" (список можно дополнить своими значениями).
2) Направление движения игрока. Относительная величина, в которой необходимо будет учитывать связь между прошлым введенным значением и нынешним. Выражается в следующих единицах: "холоднее", "горячее".

Лог игры должен записываться в файл в папку Logs, которая должна лежать рядом с файлом скрипта. Скрипт должен проверять существование папки Logs, если ее нет - он должен создавать ее. В имени лога обязательно должны присутствовать имя файла python-скрипта и время начала игры. Лог обязательно должен создаваться в начале игры и дополняться по ходу действия.
В логе должны присутствовать:
1) Время начала игры;
2) Введенные пользователем значения;
2) Время окончания игры;
3) Количество попыток, сделанных пользователем.



№ 5
